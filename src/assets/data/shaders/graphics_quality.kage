//go:build ignore

//kage:unit pixels

package main

var Quality float
var Resolution vec2

func quantize(color vec3, levels float) vec3 {
	return floor(color * levels) / levels
}

func Fragment(dest vec4, src vec2, col vec4) vec4 {
	const psLow = 4.0
	const psMedium = 2.0
	const psHigh = 1.0

	const brLow = 2.0
	const brMedium = 1.0
	const brHigh = 0.0

	const levelsLow = 64.0
	const levelsMedium = 128.0
	const levelsHigh = 256.0

	color := vec4(0.0)

	// --- Pixelation ---
	var pixelSize float
	if Quality < 0.5 {          // Low
		pixelSize = psLow
	} else if Quality < 1.5 {   // Medium
		pixelSize = psMedium
	} else {                    // High
		pixelSize = psHigh
	}

	// Round pixel coordinates to nearest block
	uv := floor(src / pixelSize) * pixelSize

	// --- Simple Box Blur ---
	var blurRadius float
	if Quality < 0.5 {
		blurRadius = brLow
	} else if Quality < 1.5 {
		blurRadius = brMedium
	} else {
		blurRadius = brHigh
	}

	sum := vec4(0.0)
	count := 0.0

	for x := -1.0; x <= 1.0; x++ {
		for y := -1.0; y <= 1.0; y++ {
			offset := vec2(x, y) * blurRadius
			sum += imageSrc0At(uv + offset)
			count += 1.0
		}
	}
	color = sum / count

	// --- Color Quantization ---
	var levels float
	if Quality < 0.5 {
		levels = levelsLow
	} else if Quality < 1.5 {
		levels = levelsMedium
	} else {
		levels = levelsHigh
	}
	color.rgb = quantize(color.rgb, levels)

	return color * col
}